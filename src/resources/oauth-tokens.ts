// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../resource';
import * as Core from '../core';
import * as OAuthTokensAPI from './oauth-tokens';

export class OAuthTokens extends APIResource {
  /**
   * Create an OAuth Token
   */
  create(body: OAuthTokenCreateParams, options?: Core.RequestOptions): Core.APIPromise<OAuthToken> {
    return this._client.post('/oauth/tokens', { body, ...options });
  }
}

/**
 * A token that is returned to your application when a user completes the OAuth
 * flow and may be used to authenticate requests. Learn more about OAuth
 * [here](/documentation/oauth).
 */
export interface OAuthToken {
  /**
   * You may use this token in place of an API key to make OAuth requests on a user's
   * behalf.
   */
  access_token: string;

  /**
   * The type of OAuth token.
   */
  token_type: 'bearer';

  /**
   * A constant representing the object's type. For this resource it will always be
   * `oauth_token`.
   */
  type: 'oauth_token';
}

export interface OAuthTokenCreateParams {
  /**
   * The credential you request in exchange for the code. In Production, this is
   * always `authorization_code`. In Sandbox, you can pass either enum value.
   *
   * - `authorization_code` - An OAuth authorization code.
   * - `production_token` - An OAuth production token.
   */
  grant_type: 'authorization_code' | 'production_token';

  /**
   * The public identifier for your application.
   */
  client_id?: string;

  /**
   * The secret that confirms you own the application. This is redundent given that
   * the request is made with your API key but it's a required component of OAuth
   * 2.0.
   */
  client_secret?: string;

  /**
   * The authorization code generated by the user and given to you as a query
   * parameter.
   */
  code?: string;

  /**
   * The production token you want to exchange for a sandbox token. This is only
   * available in Sandbox. Set `grant_type` to `production_token` to use this
   * parameter.
   */
  production_token?: string;
}

export namespace OAuthTokens {
  export import OAuthToken = OAuthTokensAPI.OAuthToken;
  export import OAuthTokenCreateParams = OAuthTokensAPI.OAuthTokenCreateParams;
}
